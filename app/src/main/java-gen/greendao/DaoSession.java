package greendao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import greendao.Category;
import greendao.Brand;
import greendao.Customer;
import greendao.Product;
import greendao.Wishlist;
import greendao.CartDetail;
import greendao.CartItem;
import greendao.Country;
import greendao.ConfigAttribute;
import greendao.ConfigOption;
import greendao.ConfigProduct;
import greendao.ConfigMerge;
import greendao.Notification;
import greendao.AlertNotified;

import greendao.CategoryDao;
import greendao.BrandDao;
import greendao.CustomerDao;
import greendao.ProductDao;
import greendao.WishlistDao;
import greendao.CartDetailDao;
import greendao.CartItemDao;
import greendao.CountryDao;
import greendao.ConfigAttributeDao;
import greendao.ConfigOptionDao;
import greendao.ConfigProductDao;
import greendao.ConfigMergeDao;
import greendao.NotificationDao;
import greendao.AlertNotifiedDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig categoryDaoConfig;
    private final DaoConfig brandDaoConfig;
    private final DaoConfig customerDaoConfig;
    private final DaoConfig productDaoConfig;
    private final DaoConfig wishlistDaoConfig;
    private final DaoConfig cartDetailDaoConfig;
    private final DaoConfig cartItemDaoConfig;
    private final DaoConfig countryDaoConfig;
    private final DaoConfig configAttributeDaoConfig;
    private final DaoConfig configOptionDaoConfig;
    private final DaoConfig configProductDaoConfig;
    private final DaoConfig configMergeDaoConfig;
    private final DaoConfig notificationDaoConfig;
    private final DaoConfig alertNotifiedDaoConfig;

    private final CategoryDao categoryDao;
    private final BrandDao brandDao;
    private final CustomerDao customerDao;
    private final ProductDao productDao;
    private final WishlistDao wishlistDao;
    private final CartDetailDao cartDetailDao;
    private final CartItemDao cartItemDao;
    private final CountryDao countryDao;
    private final ConfigAttributeDao configAttributeDao;
    private final ConfigOptionDao configOptionDao;
    private final ConfigProductDao configProductDao;
    private final ConfigMergeDao configMergeDao;
    private final NotificationDao notificationDao;
    private final AlertNotifiedDao alertNotifiedDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        categoryDaoConfig = daoConfigMap.get(CategoryDao.class).clone();
        categoryDaoConfig.initIdentityScope(type);

        brandDaoConfig = daoConfigMap.get(BrandDao.class).clone();
        brandDaoConfig.initIdentityScope(type);

        customerDaoConfig = daoConfigMap.get(CustomerDao.class).clone();
        customerDaoConfig.initIdentityScope(type);

        productDaoConfig = daoConfigMap.get(ProductDao.class).clone();
        productDaoConfig.initIdentityScope(type);

        wishlistDaoConfig = daoConfigMap.get(WishlistDao.class).clone();
        wishlistDaoConfig.initIdentityScope(type);

        cartDetailDaoConfig = daoConfigMap.get(CartDetailDao.class).clone();
        cartDetailDaoConfig.initIdentityScope(type);

        cartItemDaoConfig = daoConfigMap.get(CartItemDao.class).clone();
        cartItemDaoConfig.initIdentityScope(type);

        countryDaoConfig = daoConfigMap.get(CountryDao.class).clone();
        countryDaoConfig.initIdentityScope(type);

        configAttributeDaoConfig = daoConfigMap.get(ConfigAttributeDao.class).clone();
        configAttributeDaoConfig.initIdentityScope(type);

        configOptionDaoConfig = daoConfigMap.get(ConfigOptionDao.class).clone();
        configOptionDaoConfig.initIdentityScope(type);

        configProductDaoConfig = daoConfigMap.get(ConfigProductDao.class).clone();
        configProductDaoConfig.initIdentityScope(type);

        configMergeDaoConfig = daoConfigMap.get(ConfigMergeDao.class).clone();
        configMergeDaoConfig.initIdentityScope(type);

        notificationDaoConfig = daoConfigMap.get(NotificationDao.class).clone();
        notificationDaoConfig.initIdentityScope(type);

        alertNotifiedDaoConfig = daoConfigMap.get(AlertNotifiedDao.class).clone();
        alertNotifiedDaoConfig.initIdentityScope(type);

        categoryDao = new CategoryDao(categoryDaoConfig, this);
        brandDao = new BrandDao(brandDaoConfig, this);
        customerDao = new CustomerDao(customerDaoConfig, this);
        productDao = new ProductDao(productDaoConfig, this);
        wishlistDao = new WishlistDao(wishlistDaoConfig, this);
        cartDetailDao = new CartDetailDao(cartDetailDaoConfig, this);
        cartItemDao = new CartItemDao(cartItemDaoConfig, this);
        countryDao = new CountryDao(countryDaoConfig, this);
        configAttributeDao = new ConfigAttributeDao(configAttributeDaoConfig, this);
        configOptionDao = new ConfigOptionDao(configOptionDaoConfig, this);
        configProductDao = new ConfigProductDao(configProductDaoConfig, this);
        configMergeDao = new ConfigMergeDao(configMergeDaoConfig, this);
        notificationDao = new NotificationDao(notificationDaoConfig, this);
        alertNotifiedDao = new AlertNotifiedDao(alertNotifiedDaoConfig, this);

        registerDao(Category.class, categoryDao);
        registerDao(Brand.class, brandDao);
        registerDao(Customer.class, customerDao);
        registerDao(Product.class, productDao);
        registerDao(Wishlist.class, wishlistDao);
        registerDao(CartDetail.class, cartDetailDao);
        registerDao(CartItem.class, cartItemDao);
        registerDao(Country.class, countryDao);
        registerDao(ConfigAttribute.class, configAttributeDao);
        registerDao(ConfigOption.class, configOptionDao);
        registerDao(ConfigProduct.class, configProductDao);
        registerDao(ConfigMerge.class, configMergeDao);
        registerDao(Notification.class, notificationDao);
        registerDao(AlertNotified.class, alertNotifiedDao);
    }
    
    public void clear() {
        categoryDaoConfig.getIdentityScope().clear();
        brandDaoConfig.getIdentityScope().clear();
        customerDaoConfig.getIdentityScope().clear();
        productDaoConfig.getIdentityScope().clear();
        wishlistDaoConfig.getIdentityScope().clear();
        cartDetailDaoConfig.getIdentityScope().clear();
        cartItemDaoConfig.getIdentityScope().clear();
        countryDaoConfig.getIdentityScope().clear();
        configAttributeDaoConfig.getIdentityScope().clear();
        configOptionDaoConfig.getIdentityScope().clear();
        configProductDaoConfig.getIdentityScope().clear();
        configMergeDaoConfig.getIdentityScope().clear();
        notificationDaoConfig.getIdentityScope().clear();
        alertNotifiedDaoConfig.getIdentityScope().clear();
    }

    public CategoryDao getCategoryDao() {
        return categoryDao;
    }

    public BrandDao getBrandDao() {
        return brandDao;
    }

    public CustomerDao getCustomerDao() {
        return customerDao;
    }

    public ProductDao getProductDao() {
        return productDao;
    }

    public WishlistDao getWishlistDao() {
        return wishlistDao;
    }

    public CartDetailDao getCartDetailDao() {
        return cartDetailDao;
    }

    public CartItemDao getCartItemDao() {
        return cartItemDao;
    }

    public CountryDao getCountryDao() {
        return countryDao;
    }

    public ConfigAttributeDao getConfigAttributeDao() {
        return configAttributeDao;
    }

    public ConfigOptionDao getConfigOptionDao() {
        return configOptionDao;
    }

    public ConfigProductDao getConfigProductDao() {
        return configProductDao;
    }

    public ConfigMergeDao getConfigMergeDao() {
        return configMergeDao;
    }

    public NotificationDao getNotificationDao() {
        return notificationDao;
    }

    public AlertNotifiedDao getAlertNotifiedDao() {
        return alertNotifiedDao;
    }

}
